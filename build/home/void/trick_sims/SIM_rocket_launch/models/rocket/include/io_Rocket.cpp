/**
 * This file was automatically generated by the ICG based on the file:
 * /home/void/trick_sims/SIM_rocket_launch/models/rocket/include/Rocket.hh
 * This file contains database parameter declarations specific to the
 * data structures and enumerated types declared in the above file.
 * These database parameters are used by the Trick input and
 * data recording processors to gain access to important simulation
 * variable information.
 */

#define TRICK_IN_IOSRC
#include <stdlib.h>
#include "trick/MemoryManager.hh"
#include "trick/attributes.h"
#include "trick/parameter_types.h"
#include "trick/ClassSizeCheck.hh"
#include "trick/UnitsMap.hh"
#include "trick/checkpoint_stl.hh"
#include "/home/void/trick_sims/SIM_rocket_launch/models/rocket/include/Rocket.hh"

extern "C" {

ATTRIBUTES attrRocket[] = {
{"engStage1", "Engine", "1", "", "",
  "",
  15,TRICK_STRUCTURED, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"engStage2", "Engine", "1", "", "",
  "",
  15,TRICK_STRUCTURED, 0, 0, 0, Language_CPP, 0,
  40, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"engStage3", "Engine", "1", "", "",
  "",
  15,TRICK_STRUCTURED, 0, 0, 0, Language_CPP, 0,
  80, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"thrustForce", "double", "N", "", "",
  "Force produced by thrust",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  120, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"dragForce", "double", "N", "", "",
  "Force produced by Drag",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  136, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"gravitationalForce", "double", "N", "", "",
  "Force produced by Earth and Moon",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  152, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"totalForce", "double", "N", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  168, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"acc", "double", "m/s2", "", "",
  "xy-acceleration",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  184, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"vel", "double", "m/s", "", "",
  "xy-velocity",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  200, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"pos", "double", "m", "", "",
  "xy-position",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  216, NULL, 1, {{2, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"impact", "bool", "1", "", "",
  "Has impact occured?",
  15,TRICK_BOOLEAN, sizeof(bool), 0, 0, Language_CPP, 4,
  232, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"impactTime", "double", "s", "", "",
  "Time of Impact",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  240, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"stage", "int", "1", "", "",
  "Stage of Rocket",
  15,TRICK_INTEGER, sizeof(int), 0, 0, Language_CPP, 4,
  248, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"stage1Time", "double", "s", "", "",
  "Time of Stage 1 finished",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  256, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"stage2Time", "double", "s", "", "",
  "Time of Stage 2 finished",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  264, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"stage3Time", "double", "s", "", "",
  "Time of Stage 3 finished",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  272, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"payloadMass", "double", "kg", "", "",
  "Mass of cargo rocket contains",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  280, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"totalMass", "double", "kg", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  288, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"originalMass", "double", "kg", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  296, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"changeInMass", "double", "1", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  304, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"Cd", "double", "1", "", "",
  "Coefficient of Drag",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 4,
  312, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"airDensity", "double", "kg/m^3", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  320, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"crossArea", "double", "m^2", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  328, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"earthRadius", "double", "m", "", "",
  "",
  15,TRICK_DOUBLE, sizeof(double), 0, 0, Language_CPP, 0,
  336, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"rf", "REGULA_FALSI", "1", "", "",
  "",
  15,TRICK_STRUCTURED, 0, 0, 0, Language_CPP, 0,
  344, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL},
{"", "", "1", "", "",
  "",
  15,TRICK_VOID, 0, 0, 0, Language_CPP, 0,
  0, NULL, 0, {{0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}},
  NULL, NULL, NULL, NULL} };

} //extern "C"


void init_attrRocket() {

    static int initialized ;
    if (initialized) {
        return;
    }
    initialized = 1;

    trick_MM->add_attr_info(std::string(attrRocket[0].type_name) , &attrRocket[0], __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info(std::string(attrRocket[1].type_name) , &attrRocket[1], __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info(std::string(attrRocket[2].type_name) , &attrRocket[2], __FILE__ , __LINE__ ) ;
    trick_MM->add_attr_info(std::string(attrRocket[24].type_name) , &attrRocket[24], __FILE__ , __LINE__ ) ;
}

extern "C" {

void init_attrRocket_c_intf() {
    init_attrRocket() ;
}

size_t io_src_sizeof_Rocket() {
    return sizeof(Rocket) ;
}

void* io_src_allocate_Rocket(int num) {
    Rocket* temp = (Rocket*)calloc(num, sizeof(Rocket));
    return (void*)temp;
}

void io_src_destruct_Rocket(void* address __attribute__((unused)), int num __attribute__((unused))) {
}

void io_src_delete_Rocket(void* address __attribute__((unused))) {}

} //extern "C"

struct UnitsMapRocket {
    UnitsMapRocket() {
        Trick::UnitsMap* units_map_ptr = Trick::UnitsMap::units_map();
        units_map_ptr->add_param("Rocket_engStage1", "1") ;
        units_map_ptr->add_param("Rocket_engStage2", "1") ;
        units_map_ptr->add_param("Rocket_engStage3", "1") ;
        units_map_ptr->add_param("Rocket_thrustForce", "N") ;
        units_map_ptr->add_param("Rocket_dragForce", "N") ;
        units_map_ptr->add_param("Rocket_gravitationalForce", "N") ;
        units_map_ptr->add_param("Rocket_totalForce", "N") ;
        units_map_ptr->add_param("Rocket_acc", "m/s2") ;
        units_map_ptr->add_param("Rocket_vel", "m/s") ;
        units_map_ptr->add_param("Rocket_pos", "m") ;
        units_map_ptr->add_param("Rocket_impact", "1") ;
        units_map_ptr->add_param("Rocket_impactTime", "s") ;
        units_map_ptr->add_param("Rocket_stage", "1") ;
        units_map_ptr->add_param("Rocket_stage1Time", "s") ;
        units_map_ptr->add_param("Rocket_stage2Time", "s") ;
        units_map_ptr->add_param("Rocket_stage3Time", "s") ;
        units_map_ptr->add_param("Rocket_payloadMass", "kg") ;
        units_map_ptr->add_param("Rocket_totalMass", "kg") ;
        units_map_ptr->add_param("Rocket_originalMass", "kg") ;
        units_map_ptr->add_param("Rocket_changeInMass", "1") ;
        units_map_ptr->add_param("Rocket_Cd", "1") ;
        units_map_ptr->add_param("Rocket_airDensity", "kg/m^3") ;
        units_map_ptr->add_param("Rocket_crossArea", "m^2") ;
        units_map_ptr->add_param("Rocket_earthRadius", "m") ;
        units_map_ptr->add_param("Rocket_rf", "1") ;
    }
} umRocket;

